{
  "contractName": "RondasRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "string"
        },
        {
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "newRonda",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "getRondaById",
      "outputs": [
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "rondaExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"},{\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"newRonda\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"getRondaById\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"}],\"name\":\"rondaExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getRondaById(string)\":{\"details\":\"get ronda data by id\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"newRonda(string,address)\":{\"details\":\"receives the ronda id and the address of the ronda's admin\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rondaExists(string)\":{\"details\":\"checks if the ronda id exists\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/pixel/Development/projects/didi/didi_sc/contracts/RondasRegistry.sol\":\"RondasRegistry\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/pixel/Development/projects/didi/didi_sc/contracts/Ronda.sol\":{\"keccak256\":\"0x0717a02c4fe55b41b8ae992d7361b6242024e90130bd1b584dd12a64905671ec\",\"urls\":[\"bzzr://ab1db173948666a1ddda00340987508c336bdd3201f7233229514cd224462464\"]},\"/Users/pixel/Development/projects/didi/didi_sc/contracts/RondasRegistry.sol\":{\"keccak256\":\"0xb1c199ef5f199c0e129c4a6c29470765dba225fc46ec4f2001a7c2324e3693e2\",\"urls\":[\"bzzr://96381bd799090f0741020bb983a1cd5b1e8e0a29428d5c1340fad992860c434a\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]}},\"version\":1}",
  "bytecode": "0x60806040526100126100d260201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36100da565b600033905090565b612324806100e96000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146103a25780638da5cb5b146103ac5780638f32d59b146103f6578063f2fde38b146104185761007d565b8063291c869e1461008257806334e2677c1461015d57806369fab0b2146102cf575b600080fd5b61015b6004803603604081101561009857600080fd5b81019080803590602001906401000000008111156100b557600080fd5b8201836020820111156100c757600080fd5b803590602001918460018302840111640100000000831117156100e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061045c565b005b6102166004803603602081101561017357600080fd5b810190808035906020019064010000000081111561019057600080fd5b8201836020820111156101a257600080fd5b803590602001918460018302840111640100000000831117156101c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610843565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b83811015610292578082015181840152602081019050610277565b50505050905090810190601f1680156102bf5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610388600480360360208110156102e557600080fd5b810190808035906020019064010000000081111561030257600080fd5b82018360208201111561031457600080fd5b8035906020019184600183028401116401000000008311171561033657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a64565b604051808215151515815260200191505060405180910390f35b6103aa610ae7565b005b6103b4610c20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103fe610c49565b604051808215151515815260200191505060405180910390f35b61045a6004803603602081101561042e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca7565b005b610464610c49565b6104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001826040518082805190602001908083835b6020831061050c57805182526020820191506020810190506020830392506104e9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160159054906101000a900460ff16156105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122d46025913960400191505060405180910390fd5b6000816040516105b590610e79565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610607573d6000803e3d6000fd5b509050826001846040518082805190602001908083835b60208310610641578051825260208201915060208101905060208303925061061e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001908051906020019061068a929190610e86565b50806001846040518082805190602001908083835b602083106106c2578051825260208201915060208101905060208303925061069f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180846040518082805190602001908083835b6020831061076d578051825260208201915060208101905060208303925061074a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160146101000a81548160ff021916908315150217905550600180846040518082805190602001908083835b602083106107f157805182526020820191506020810190506020830392506107ce565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160156101000a81548160ff021916908315150217905550505050565b60606000806001846040518082805190602001908083835b6020831061087e578051825260208201915060208101905060208303925061085b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000016001856040518082805190602001908083835b602083106108ea57805182526020820191506020810190506020830392506108c7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001866040518082805190602001908083835b602083106109775780518252602082019150602081019050602083039250610954565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160149054906101000a900460ff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a505780601f10610a2557610100808354040283529160200191610a50565b820191906000526020600020905b815481529060010190602001808311610a3357829003601f168201915b505050505092509250925092509193909250565b60006001826040518082805190602001908083835b60208310610a9c5780518252602082019150602081019050602083039250610a79565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160159054906101000a900460ff169050919050565b610aef610c49565b610b61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c8b610d2d565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610caf610c49565b610d21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d2a81610d35565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122ae6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61138280610f2c83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ec757805160ff1916838001178555610ef5565b82800160010185558215610ef5579182015b82811115610ef4578251825591602001919060010190610ed9565b5b509050610f029190610f06565b5090565b610f2891905b80821115610f24576000816000905550600101610f0c565b5090565b9056fe608060405234801561001057600080fd5b506040516020806113828339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506112f1806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b6db75a01161005b578063b6db75a014610114578063be9a655514610136578063c39e143f14610140578063dfafe10f1461014a5761007d565b8063596979c1146100825780637699f743146100c6578063a008bbca1461010a575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018e565b005b610108600480360360208110156100dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061043c565b005b610112610765565b005b61011c610af9565b604051808215151515815260200191505060405180910390f35b61013e610b50565b005b610148610c2e565b005b61018c6004803603602081101561016057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc1565b005b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b6000600281111561025d57fe5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660028111156102b857fe5b1461030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083600281111561036c57fe5b021790555043600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610444610af9565b6104b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b6000600281111561058557fe5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660028111156105e057fe5b14610636576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083600281111561069557fe5b021790555043600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611279602b913960400191505060405180910390fd5b6000600281111561091a57fe5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600281111561097557fe5b146109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690836002811115610a2a57fe5b021790555043600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b58610af9565b610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600060015414610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806112a46022913960400191505060405180910390fd5b43600181905550565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610cf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611279602b913960400191505060405180910390fd5b60006002811115610de357fe5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166002811115610e3e57fe5b14610e94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b60028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690836002811115610ef257fe5b021790555043600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610fc9610af9565b61103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16156110e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061124a602f913960400191505060405180910390fd5b80600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908360028111156111c157fe5b02179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083151502179055505056fe546865207061727469636970616e74207374617465206d7573742062652070656e64696e67546865207061727469636970616e7420697320616c72656164792070726573656e74206f6e2074686520726f6e64614f6e6c7920746865207061727469636970616e742063616e2063616c6c20746869732066756e6374696f6e54686520726f6e64612063616e277420626520616c72656164792073746172746564a165627a7a723058200202e62fcb68394bd6d117955aeba3f75b48cb35d04471613180f3b461b0c9c100294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734c6120726f6e6461206e6f2064656265206578697374697220706172612063726561726c61a165627a7a7230582087dddaea5bba46097c2ff58dca826cf5ecf3f7a77ce634b27ab863d7c59b70490029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146103a25780638da5cb5b146103ac5780638f32d59b146103f6578063f2fde38b146104185761007d565b8063291c869e1461008257806334e2677c1461015d57806369fab0b2146102cf575b600080fd5b61015b6004803603604081101561009857600080fd5b81019080803590602001906401000000008111156100b557600080fd5b8201836020820111156100c757600080fd5b803590602001918460018302840111640100000000831117156100e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061045c565b005b6102166004803603602081101561017357600080fd5b810190808035906020019064010000000081111561019057600080fd5b8201836020820111156101a257600080fd5b803590602001918460018302840111640100000000831117156101c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610843565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b83811015610292578082015181840152602081019050610277565b50505050905090810190601f1680156102bf5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610388600480360360208110156102e557600080fd5b810190808035906020019064010000000081111561030257600080fd5b82018360208201111561031457600080fd5b8035906020019184600183028401116401000000008311171561033657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610a64565b604051808215151515815260200191505060405180910390f35b6103aa610ae7565b005b6103b4610c20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103fe610c49565b604051808215151515815260200191505060405180910390f35b61045a6004803603602081101561042e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca7565b005b610464610c49565b6104d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001826040518082805190602001908083835b6020831061050c57805182526020820191506020810190506020830392506104e9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160159054906101000a900460ff16156105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806122d46025913960400191505060405180910390fd5b6000816040516105b590610e79565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015610607573d6000803e3d6000fd5b509050826001846040518082805190602001908083835b60208310610641578051825260208201915060208101905060208303925061061e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001908051906020019061068a929190610e86565b50806001846040518082805190602001908083835b602083106106c2578051825260208201915060208101905060208303925061069f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180846040518082805190602001908083835b6020831061076d578051825260208201915060208101905060208303925061074a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160146101000a81548160ff021916908315150217905550600180846040518082805190602001908083835b602083106107f157805182526020820191506020810190506020830392506107ce565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160156101000a81548160ff021916908315150217905550505050565b60606000806001846040518082805190602001908083835b6020831061087e578051825260208201915060208101905060208303925061085b565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000016001856040518082805190602001908083835b602083106108ea57805182526020820191506020810190506020830392506108c7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001866040518082805190602001908083835b602083106109775780518252602082019150602081019050602083039250610954565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160149054906101000a900460ff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a505780601f10610a2557610100808354040283529160200191610a50565b820191906000526020600020905b815481529060010190602001808311610a3357829003601f168201915b505050505092509250925092509193909250565b60006001826040518082805190602001908083835b60208310610a9c5780518252602082019150602081019050602083039250610a79565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160159054906101000a900460ff169050919050565b610aef610c49565b610b61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c8b610d2d565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610caf610c49565b610d21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d2a81610d35565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122ae6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61138280610f2c83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ec757805160ff1916838001178555610ef5565b82800160010185558215610ef5579182015b82811115610ef4578251825591602001919060010190610ed9565b5b509050610f029190610f06565b5090565b610f2891905b80821115610f24576000816000905550600101610f0c565b5090565b9056fe608060405234801561001057600080fd5b506040516020806113828339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506112f1806100916000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b6db75a01161005b578063b6db75a014610114578063be9a655514610136578063c39e143f14610140578063dfafe10f1461014a5761007d565b8063596979c1146100825780637699f743146100c6578063a008bbca1461010a575b600080fd5b6100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061018e565b005b610108600480360360208110156100dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061043c565b005b610112610765565b005b61011c610af9565b604051808215151515815260200191505060405180910390f35b61013e610b50565b005b610148610c2e565b005b61018c6004803603602081101561016057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fc1565b005b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b6000600281111561025d57fe5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660028111156102b857fe5b1461030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083600281111561036c57fe5b021790555043600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610444610af9565b6104b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b6000600281111561058557fe5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660028111156105e057fe5b14610636576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083600281111561069557fe5b021790555043600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611279602b913960400191505060405180910390fd5b6000600281111561091a57fe5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600281111561097557fe5b146109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690836002811115610a2a57fe5b021790555043600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610b58610af9565b610bca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600060015414610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806112a46022913960400191505060405180910390fd5b43600181905550565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16610cf0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f546865207061727469636970616e7420646f65736e277420657869737473000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610dd6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611279602b913960400191505060405180910390fd5b60006002811115610de357fe5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166002811115610e3e57fe5b14610e94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806112256025913960400191505060405180910390fd5b60028060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690836002811115610ef257fe5b021790555043600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555033600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610fc9610af9565b61103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4973206e6f742061646d696e210000000000000000000000000000000000000081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff16156110e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061124a602f913960400191505060405180910390fd5b80600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908360028111156111c157fe5b02179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083151502179055505056fe546865207061727469636970616e74207374617465206d7573742062652070656e64696e67546865207061727469636970616e7420697320616c72656164792070726573656e74206f6e2074686520726f6e64614f6e6c7920746865207061727469636970616e742063616e2063616c6c20746869732066756e6374696f6e54686520726f6e64612063616e277420626520616c72656164792073746172746564a165627a7a723058200202e62fcb68394bd6d117955aeba3f75b48cb35d04471613180f3b461b0c9c100294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734c6120726f6e6461206e6f2064656265206578697374697220706172612063726561726c61a165627a7a7230582087dddaea5bba46097c2ff58dca826cf5ecf3f7a77ce634b27ab863d7c59b70490029",
  "sourceMap": "106:1162:2:-;;;707:12:4;:10;;;:12;;:::i;:::-;698:6;;:21;;;;;;;;;;;;;;;;;;767:6;;;;;;;;;;;734:40;;763:1;734:40;;;;;;;;;;;;106:1162:2;;788:96:3;833:15;867:10;860:17;;788:96;:::o;106:1162:2:-;;;;;;;",
  "deployedSourceMap": "106:1162:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:1162:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:457;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;406:457:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;406:457:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;406:457:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;406:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;406:457:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;918:174;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;918:174:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;918:174:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;918:174:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;918:174:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;918:174:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;918:174:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1156:109:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1156:109:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1156:109:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1156:109:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1156:109:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1642:137:4;;;:::i;:::-;;857:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1208:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1928:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;406:457:2;1061:9:4;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:6:2;504:3;497:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;497:11:2;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;496:19;488:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:11;640:6;630:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;630:17:2;616:31;;736:3;719:6;726:3;719:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;719:11:2;;;;;;;;;;;;;;;;;;;;;:14;;:20;;;;;;;;;;;;:::i;:::-;;780:5;749:6;756:3;749:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;749:11:2;;;;;;;;;;;;;;;;;;;;;:20;;;:37;;;;;;;;;;;;;;;;;;817:4;796:6;803:3;796:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;796:11:2;;;;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;852:4;831:6;838:3;831:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;831:11:2;;;;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;1117:1:4;406:457:2;;:::o;918:174::-;980:13;995:7;1004:4;1028:6;1035:3;1028:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1028:11:2;;;;;;;;;;;;;;;;;;;;;:14;;1044:6;1051:3;1044:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1044:11:2;;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;1066:6;1073:3;1066:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1066:11:2;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1020:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:174;;;;;:::o;1156:109::-;1217:4;1240:6;1247:3;1240:11;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1240:11:2;;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1233:25;;1156:109;;;:::o;1642:137:4:-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1740:1;1703:40;;1724:6;;;;;;;;;;;1703:40;;;;;;;;;;;;1770:1;1753:6;;:19;;;;;;;;;;;;;;;;;;1642:137::o;857:77::-;895:7;921:6;;;;;;;;;;;914:13;;857:77;:::o;1208:92::-;1248:4;1287:6;;;;;;;;;;;1271:22;;:12;:10;:12::i;:::-;:22;;;1264:29;;1208:92;:::o;1928:107::-;1061:9;:7;:9::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;788:96:3:-;833:15;867:10;860:17;;788:96;:::o;2136:225:4:-;2229:1;2209:22;;:8;:22;;;;2201:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2318:8;2289:38;;2310:6;;;;;;;;;;;2289:38;;;;;;;;;;;;2346:8;2337:6;;:17;;;;;;;;;;;;;;;;;;2136:225;:::o;106:1162:2:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21;\n\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\nimport \"./Ronda.sol\";\n\ncontract RondasRegistry is Ownable {\n    \n    struct RondaInstance {\n        string id;\n        address instance;\n        bool active;\n        bool exists;\n    }\n\n    mapping(string => RondaInstance) rondas;\n\n    /**\n     * @dev receives the ronda id and the address of the ronda's admin\n     */\n    function newRonda(string memory _id, address _admin) onlyOwner() public {\n        require(!rondas[_id].exists, \"La ronda no debe existir para crearla\");\n        \n        // we create the ronda instance\n        Ronda ronda = new Ronda(_admin);\n        // add the contract instance to our rondas collection\n        rondas[_id].id = _id;\n        rondas[_id].instance = address(ronda);\n        rondas[_id].active = true;\n        rondas[_id].exists = true;\n    }\n\n    /**\n     * @dev get ronda data by id\n     */\n    function getRondaById(string memory _id) public view returns (string memory, address, bool) {\n        return (rondas[_id].id, rondas[_id].instance, rondas[_id].active);\n    }\n\n    /**\n     * @dev checks if the ronda id exists\n     */\n    function rondaExists(string memory _id) public view returns (bool) {\n        return rondas[_id].exists;\n    }\n\n}\n",
  "sourcePath": "/Users/pixel/Development/projects/didi/didi_sc/contracts/RondasRegistry.sol",
  "ast": {
    "absolutePath": "/Users/pixel/Development/projects/didi/didi_sc/contracts/RondasRegistry.sol",
    "exportedSymbols": {
      "RondasRegistry": [
        515
      ]
    },
    "id": 516,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 402,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 403,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 657,
        "src": "27:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pixel/Development/projects/didi/didi_sc/contracts/Ronda.sol",
        "file": "./Ronda.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 401,
        "src": "83:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 405,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "133:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$656",
                "typeString": "contract Ownable"
              }
            },
            "id": 406,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:2"
          }
        ],
        "contractDependencies": [
          400,
          542,
          656
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 515,
        "linearizedBaseContracts": [
          515,
          656,
          542
        ],
        "name": "RondasRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RondasRegistry.RondaInstance",
            "id": 415,
            "members": [
              {
                "constant": false,
                "id": 408,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "183:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 407,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "183:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 410,
                "name": "instance",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "202:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 409,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 412,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "228:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 411,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "228:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 414,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "249:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 413,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RondaInstance",
            "nodeType": "StructDefinition",
            "scope": 515,
            "src": "152:115:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 419,
            "name": "rondas",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "273:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
              "typeString": "mapping(string => struct RondasRegistry.RondaInstance)"
            },
            "typeName": {
              "id": 418,
              "keyType": {
                "id": 416,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "281:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "273:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                "typeString": "mapping(string => struct RondasRegistry.RondaInstance)"
              },
              "valueType": {
                "contractScope": null,
                "id": 417,
                "name": "RondaInstance",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 415,
                "src": "291:13:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RondaInstance_$415_storage_ptr",
                  "typeString": "struct RondasRegistry.RondaInstance"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "478:385:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "496:19:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "rondas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "497:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                                "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                              }
                            },
                            "id": 431,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "504:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "497:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                              "typeString": "struct RondasRegistry.RondaInstance storage ref"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 414,
                          "src": "497:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6120726f6e6461206e6f2064656265206578697374697220706172612063726561726c61",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_566c6fb5e50145f7983593ca55d63bc3cb200374ca2f66f92bf70ab94b35d3fd",
                          "typeString": "literal_string \"La ronda no debe existir para crearla\""
                        },
                        "value": "La ronda no debe existir para crearla"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_566c6fb5e50145f7983593ca55d63bc3cb200374ca2f66f92bf70ab94b35d3fd",
                          "typeString": "literal_string \"La ronda no debe existir para crearla\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        674,
                        675
                      ],
                      "referencedDeclaration": 675,
                      "src": "488:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "488:69:2"
                },
                {
                  "assignments": [
                    438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "name": "ronda",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "616:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ronda_$400",
                        "typeString": "contract Ronda"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 437,
                        "name": "Ronda",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 400,
                        "src": "616:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ronda_$400",
                          "typeString": "contract Ronda"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "630:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Ronda_$400_$",
                        "typeString": "function (address) returns (contract Ronda)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 439,
                        "name": "Ronda",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 400,
                        "src": "634:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ronda_$400",
                          "typeString": "contract Ronda"
                        }
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ronda_$400",
                      "typeString": "contract Ronda"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "616:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 444,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "719:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 446,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "726:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "719:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 408,
                      "src": "719:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 448,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "736:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "719:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "719:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "749:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 453,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 452,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "756:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "749:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "instance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "749:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 456,
                          "name": "ronda",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "780:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ronda_$400",
                            "typeString": "contract Ronda"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Ronda_$400",
                            "typeString": "contract Ronda"
                          }
                        ],
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "772:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "749:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "749:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "796:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 462,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "803:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "796:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "796:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "817:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "796:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "796:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 467,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "831:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 468,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "838:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "831:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 414,
                      "src": "831:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "852:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "831:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "831:25:2"
                }
              ]
            },
            "documentation": "@dev receives the ronda id and the address of the ronda's admin",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "459:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "459:11:2"
              }
            ],
            "name": "newRonda",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "424:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "443:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:35:2"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:2"
            },
            "scope": 515,
            "src": "406:457:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "1010:82:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1028:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 488,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 487,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1035:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1028:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 408,
                        "src": "1028:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 490,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1044:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 491,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1051:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1044:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "instance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 410,
                        "src": "1044:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 494,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1066:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 496,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 495,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1073:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1066:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 412,
                        "src": "1066:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 498,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1027:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_address_$_t_bool_$",
                      "typeString": "tuple(string storage ref,address,bool)"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "1020:65:2"
                }
              ]
            },
            "documentation": "@dev get ronda data by id",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRondaById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "940:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:19:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "980:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "995:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "1004:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:30:2"
            },
            "scope": 515,
            "src": "918:174:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "1223:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "rondas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "1240:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                          "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                        }
                      },
                      "id": 510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "1247:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1240:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                        "typeString": "struct RondasRegistry.RondaInstance storage ref"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 414,
                    "src": "1240:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 507,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "1233:25:2"
                }
              ]
            },
            "documentation": "@dev checks if the ronda id exists",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rondaExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1177:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:19:2"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1217:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1216:6:2"
            },
            "scope": 515,
            "src": "1156:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 516,
        "src": "106:1162:2"
      }
    ],
    "src": "0:1269:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/pixel/Development/projects/didi/didi_sc/contracts/RondasRegistry.sol",
    "exportedSymbols": {
      "RondasRegistry": [
        515
      ]
    },
    "id": 516,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 402,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 403,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 657,
        "src": "27:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/pixel/Development/projects/didi/didi_sc/contracts/Ronda.sol",
        "file": "./Ronda.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 516,
        "sourceUnit": 401,
        "src": "83:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 405,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "133:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$656",
                "typeString": "contract Ownable"
              }
            },
            "id": 406,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:2"
          }
        ],
        "contractDependencies": [
          400,
          542,
          656
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 515,
        "linearizedBaseContracts": [
          515,
          656,
          542
        ],
        "name": "RondasRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RondasRegistry.RondaInstance",
            "id": 415,
            "members": [
              {
                "constant": false,
                "id": 408,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "183:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 407,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "183:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 410,
                "name": "instance",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "202:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 409,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "202:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 412,
                "name": "active",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "228:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 411,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "228:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 414,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 415,
                "src": "249:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 413,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RondaInstance",
            "nodeType": "StructDefinition",
            "scope": 515,
            "src": "152:115:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 419,
            "name": "rondas",
            "nodeType": "VariableDeclaration",
            "scope": 515,
            "src": "273:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
              "typeString": "mapping(string => struct RondasRegistry.RondaInstance)"
            },
            "typeName": {
              "id": 418,
              "keyType": {
                "id": 416,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "281:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "273:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                "typeString": "mapping(string => struct RondasRegistry.RondaInstance)"
              },
              "valueType": {
                "contractScope": null,
                "id": 417,
                "name": "RondaInstance",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 415,
                "src": "291:13:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RondaInstance_$415_storage_ptr",
                  "typeString": "struct RondasRegistry.RondaInstance"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "478:385:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "496:19:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 429,
                              "name": "rondas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "497:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                                "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                              }
                            },
                            "id": 431,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "504:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "497:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                              "typeString": "struct RondasRegistry.RondaInstance storage ref"
                            }
                          },
                          "id": 432,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 414,
                          "src": "497:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6120726f6e6461206e6f2064656265206578697374697220706172612063726561726c61",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:39:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_566c6fb5e50145f7983593ca55d63bc3cb200374ca2f66f92bf70ab94b35d3fd",
                          "typeString": "literal_string \"La ronda no debe existir para crearla\""
                        },
                        "value": "La ronda no debe existir para crearla"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_566c6fb5e50145f7983593ca55d63bc3cb200374ca2f66f92bf70ab94b35d3fd",
                          "typeString": "literal_string \"La ronda no debe existir para crearla\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        674,
                        675
                      ],
                      "referencedDeclaration": 675,
                      "src": "488:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "488:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "488:69:2"
                },
                {
                  "assignments": [
                    438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "name": "ronda",
                      "nodeType": "VariableDeclaration",
                      "scope": 474,
                      "src": "616:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ronda_$400",
                        "typeString": "contract Ronda"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 437,
                        "name": "Ronda",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 400,
                        "src": "616:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ronda_$400",
                          "typeString": "contract Ronda"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "640:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "630:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Ronda_$400_$",
                        "typeString": "function (address) returns (contract Ronda)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 439,
                        "name": "Ronda",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 400,
                        "src": "634:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ronda_$400",
                          "typeString": "contract Ronda"
                        }
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ronda_$400",
                      "typeString": "contract Ronda"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "616:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 444,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "719:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 446,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "726:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "719:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 408,
                      "src": "719:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 448,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "736:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "719:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "719:20:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "749:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 453,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 452,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "756:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "749:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "instance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "749:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 456,
                          "name": "ronda",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "780:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ronda_$400",
                            "typeString": "contract Ronda"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Ronda_$400",
                            "typeString": "contract Ronda"
                          }
                        ],
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "772:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "749:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "749:37:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 460,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "796:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 462,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "803:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "796:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "796:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "817:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "796:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "796:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 467,
                          "name": "rondas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "831:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                            "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 468,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "838:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "831:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                          "typeString": "struct RondasRegistry.RondaInstance storage ref"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 414,
                      "src": "831:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "852:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "831:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "831:25:2"
                }
              ]
            },
            "documentation": "@dev receives the ronda id and the address of the ronda's admin",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "459:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "459:11:2"
              }
            ],
            "name": "newRonda",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "424:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "443:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:35:2"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:0:2"
            },
            "scope": 515,
            "src": "406:457:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 500,
              "nodeType": "Block",
              "src": "1010:82:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 486,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1028:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 488,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 487,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1035:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1028:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 408,
                        "src": "1028:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 490,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1044:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 492,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 491,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1051:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1044:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "instance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 410,
                        "src": "1044:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 494,
                            "name": "rondas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1066:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                              "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                            }
                          },
                          "id": 496,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 495,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1073:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1066:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                            "typeString": "struct RondasRegistry.RondaInstance storage ref"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 412,
                        "src": "1066:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 498,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1027:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_address_$_t_bool_$",
                      "typeString": "tuple(string storage ref,address,bool)"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 499,
                  "nodeType": "Return",
                  "src": "1020:65:2"
                }
              ]
            },
            "documentation": "@dev get ronda data by id",
            "id": 501,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRondaById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "940:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:19:2"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "980:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 482,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "995:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 501,
                  "src": "1004:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "979:30:2"
            },
            "scope": 515,
            "src": "918:174:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "1223:42:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "rondas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "1240:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_RondaInstance_$415_storage_$",
                          "typeString": "mapping(string memory => struct RondasRegistry.RondaInstance storage ref)"
                        }
                      },
                      "id": 510,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "1247:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1240:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RondaInstance_$415_storage",
                        "typeString": "struct RondasRegistry.RondaInstance storage ref"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 414,
                    "src": "1240:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 507,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "1233:25:2"
                }
              ]
            },
            "documentation": "@dev checks if the ronda id exists",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rondaExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1177:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1176:19:2"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "1217:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1216:6:2"
            },
            "scope": 515,
            "src": "1156:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 516,
        "src": "106:1162:2"
      }
    ],
    "src": "0:1269:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x97d72aeb1232191534c51F4aeD308612E032b1b4",
      "transactionHash": "0x6832dd1510dd7577afdfa6ae65678ce84c1a3e9c044501497327e4ae5302d268"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-11-25T13:13:23.657Z",
  "devdoc": {
    "methods": {
      "getRondaById(string)": {
        "details": "get ronda data by id"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "newRonda(string,address)": {
        "details": "receives the ronda id and the address of the ronda's admin"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rondaExists(string)": {
        "details": "checks if the ronda id exists"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}